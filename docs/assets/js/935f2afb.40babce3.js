"use strict";(self.webpackChunkpoiji_documentation=self.webpackChunkpoiji_documentation||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Poiji","href":"/poiji/docs/intro","docId":"intro"},{"type":"link","label":"Poiji Structure","href":"/poiji/docs/structure","docId":"structure"},{"type":"category","label":"Features","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Annotations","href":"/poiji/docs/features/Annotations","docId":"features/Annotations"},{"type":"link","label":"Prefer Default Values","href":"/poiji/docs/features/Prefer Default Values","docId":"features/Prefer Default Values"},{"type":"link","label":"Sheet Name Option","href":"/poiji/docs/features/Sheet Name Option","docId":"features/Sheet Name Option"},{"type":"link","label":"Protected Excel Files","href":"/poiji/docs/features/Protected Excels","docId":"features/Protected Excels"},{"type":"link","label":"Super Class Inheritance","href":"/poiji/docs/features/Super Class Inheritance","docId":"features/Super Class Inheritance"},{"type":"link","label":"Support Consumer","href":"/poiji/docs/features/Support Consumer Interface","docId":"features/Support Consumer Interface"},{"type":"link","label":"Custom Casting","href":"/poiji/docs/features/Custom Casting","docId":"features/Custom Casting"},{"type":"link","label":"Parse UnkownCells","href":"/poiji/docs/features/Parse UnknownCells","docId":"features/Parse UnknownCells"},{"type":"link","label":"Mandatory Columns","href":"/poiji/docs/features/Mandatory Columns","docId":"features/Mandatory Columns"},{"type":"link","label":"Debug Cells","href":"/poiji/docs/features/Debug Cells Formats","docId":"features/Debug Cells Formats"},{"type":"link","label":"Modify Cell Format","href":"/poiji/docs/features/Modify Cells Formats","docId":"features/Modify Cells Formats"},{"type":"link","label":"Read Properties","href":"/poiji/docs/features/Read Excel Properties","docId":"features/Read Excel Properties"},{"type":"link","label":"Display Cells","href":"/poiji/docs/features/Disable Cells Formats","docId":"features/Disable Cells Formats"},{"type":"link","label":"Custom Formating","href":"/poiji/docs/features/Custom Formatting","docId":"features/Custom Formatting"},{"type":"link","label":"Poi Sheet Object","href":"/poiji/docs/features/Use Poi Sheet","docId":"features/Use Poi Sheet"},{"type":"link","label":"Override Default Locale","href":"/poiji/docs/features/Update Default Locale","docId":"features/Update Default Locale"}]},{"type":"link","label":"What\'s next?","href":"/poiji/docs/whats-next","docId":"whats-next"}]},"docs":{"features/Annotations":{"id":"features/Annotations","title":"Annotations","description":"Create your object model:","sidebar":"tutorialSidebar"},"features/Custom Casting":{"id":"features/Custom Casting","title":"Custom Casting","description":"You can create your own casting implementation without relying on the default Poiji casting configuration using the Casting interface.","sidebar":"tutorialSidebar"},"features/Custom Formatting":{"id":"features/Custom Formatting","title":"Custom Formating","description":"You can create your own formatting implementation without relying on the default Poiji formatting configuration using the Formatting interface.","sidebar":"tutorialSidebar"},"features/Debug Cells Formats":{"id":"features/Debug Cells Formats","title":"Debug Cells","description":"We can observe each cell format of a given excel file. Assume that we have an excel file like below:","sidebar":"tutorialSidebar"},"features/Disable Cells Formats":{"id":"features/Disable Cells Formats","title":"Display Cells","description":"Consider we have a xls or xlsx excel file like below:","sidebar":"tutorialSidebar"},"features/Mandatory Columns":{"id":"features/Mandatory Columns","title":"Mandatory Columns","description":"By default @ExcelCellName and @ExcelCell expect their related excel columns exist in a given excel file, otherwise a HeaderMissingException will be thrown.","sidebar":"tutorialSidebar"},"features/Modify Cells Formats":{"id":"features/Modify Cells Formats","title":"Modify Cell Format","description":"We can change the default format of a cell using PoijiNumberFormat. Recall Debug Cells Formats, we are unable to see the correct cell format, what\'s more the excel file uses another format which we do not want to.","sidebar":"tutorialSidebar"},"features/Parse UnknownCells":{"id":"features/Parse UnknownCells","title":"Parse UnkownCells","description":"You can annotate a Map with @ExcelUnknownCells to parse all entries,","sidebar":"tutorialSidebar"},"features/Prefer Default Values":{"id":"features/Prefer Default Values","title":"Prefer Default Values","description":"If you want a date field to return null rather than a default date, use PoijiOptionsBuilder with the preferNullOverDefault method as follows:","sidebar":"tutorialSidebar"},"features/Protected Excels":{"id":"features/Protected Excels","title":"Protected Excel Files","description":"Consider that your excel file is protected with a password, you can define the password via PoijiOptionsBuilder  to read rows:","sidebar":"tutorialSidebar"},"features/Read Excel Properties":{"id":"features/Read Excel Properties","title":"Read Properties","description":"It is possible to read excel properties from xlsx files. To achieve that, create a class with fields annotated with @ExcelProperty.","sidebar":"tutorialSidebar"},"features/Sheet Name Option":{"id":"features/Sheet Name Option","title":"Sheet Name Option","description":"Poiji allows specifying the sheet name using annotation","sidebar":"tutorialSidebar"},"features/Super Class Inheritance":{"id":"features/Super Class Inheritance","title":"Super Class Inheritance","description":"Your object model may be derived from a super class:","sidebar":"tutorialSidebar"},"features/Support Consumer Interface":{"id":"features/Support Consumer Interface","title":"Support Consumer","description":"Poiji supports Consumer Interface. As @fmarazita explained the usage, there are several benefits of having a Consumer:","sidebar":"tutorialSidebar"},"features/Update Default Locale":{"id":"features/Update Default Locale","title":"Override Default Locale","description":"For parsing numbers and dates java.lang.Locale is used. Also Apache Poi uses the Locale for parsing.","sidebar":"tutorialSidebar"},"features/Use Poi Sheet":{"id":"features/Use Poi Sheet","title":"Poi Sheet Object","description":"Poiji accepts excel records via Poi Sheet object as well:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Poiji","description":"Welcome to Poiji documentation. In this section, we go through how to integrate Poiji into your project followed by its features.","sidebar":"tutorialSidebar"},"structure":{"id":"structure","title":"Poiji Structure","description":"In order to use Poiji, you can directly use Poiji#fromExcel and to modify the default settings, apply  PoijiOptions.PoijiOptionsBuilder.","sidebar":"tutorialSidebar"},"whats-next":{"id":"whats-next","title":"What\'s next?","description":"- Find a related release for your project.","sidebar":"tutorialSidebar"}}}')}}]);