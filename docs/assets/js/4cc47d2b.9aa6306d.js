"use strict";(self.webpackChunkpoiji_documentation=self.webpackChunkpoiji_documentation||[]).push([[971],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),f=l,d=m["".concat(s,".").concat(f)]||m[f]||c[f]||a;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7805:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var r=n(7462),l=n(3366),a=(n(7294),n(3905)),o=["components"],i={sidebar_position:13},s="Display Cells",p={unversionedId:"features/Disable Cells Formats",id:"features/Disable Cells Formats",title:"Display Cells",description:"Consider we have a xls or xlsx excel file like below:",source:"@site/docs/features/Disable Cells Formats.md",sourceDirName:"features",slug:"/features/Disable Cells Formats",permalink:"/poiji/docs/features/Disable Cells Formats",editUrl:"https://github.com/ozlerhakan/poiji-documentation/edit/main/docs/features/Disable Cells Formats.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Read Properties",permalink:"/poiji/docs/features/Read Excel Properties"},next:{title:"Custom Formating",permalink:"/poiji/docs/features/Custom Formatting"}},u=[],c={toc:u};function m(e){var t=e.components,n=(0,l.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"display-cells"},"Display Cells"),(0,a.kt)("p",null,"Consider we have a xls or xlsx excel file like below:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Amount"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"25,00")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"(50,00)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"(65,00)")))),(0,a.kt)("p",null,"Since we use a cell format on line 4 and 5 (i.e. ",(0,a.kt)("inlineCode",{parentName:"p"},"(50,00)")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"(65,00)"),"), we don't want to see the formatted value of each cell after processing. In order to do that, we can use ",(0,a.kt)("inlineCode",{parentName:"p"},"@DisableCellFormatXLS")," on a field if the file ends with ",(0,a.kt)("inlineCode",{parentName:"p"},"xls")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"disableXLSXNumberCellFormat()")," for xlsx files using ",(0,a.kt)("inlineCode",{parentName:"p"},"PoijiOptions"),"."),(0,a.kt)("p",null,".xls files"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class TestInfo {\n    @ExcelCell(0)\n    @DisableCellFormatXLS <1>\n    public BigDecimal amount;\n}\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"we only disable cell formats on the specified column.")),(0,a.kt)("p",null,".xlsx files"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class TestInfo {\n    @ExcelCell(0)\n    private BigDecimal amount;\n}\n\nPoijiOptions options = PoijiOptions.PoijiOptionsBuilder.settings()\n                .disableXLSXNumberCellFormat() <1>\n                .build();\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"when disabling ",(0,a.kt)("em",{parentName:"li"},"number")," cell format, we disable it in the entire cells for xlsx files.")),(0,a.kt)("p",null,"and let Poiji ignores the cell formats:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"List<TestInfo> result = Poiji.fromExcel(new File(path), TestInfo.class, options); <1>\n\nresult.get(1).amount\n// -50\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Add ",(0,a.kt)("inlineCode",{parentName:"li"},"options"),", if your excel is xlsx file.")))}m.isMDXComponent=!0}}]);